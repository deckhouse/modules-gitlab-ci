.publish:
  stage: deploy
  script:
    - |
      # Login to Gitlab (source) registry if target registry is not same Gitlab
      if [[ "x${MODULES_REGISTRY}" != "x${CI_REGISTRY}" ]]; then
        echo "Login to Gitlab (source) ${CI_REGISTRY}..."
        werf cr login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
      fi

      # Login to target registry
      werf cr login -u ${MODULES_REGISTRY_LOGIN} -p ${MODULES_REGISTRY_PASSWORD} ${MODULES_REGISTRY}
    # generate MODULES_MODULE_SOURCE
    - |
      export MODULES_MODULE_SOURCE="${MODULES_REGISTRY}/${MODULES_REGISTRY_PATH}"
    # Module images
    - |
      for image in $(ls images); do
        IMAGE_SRC="$(jq -r ".Images.\"$image\".DockerImageName" images_tags_werf.json)"
        IMAGE_TAG="$(jq -r ".Images.\"$image\".DockerTag" images_tags_werf.json)"
        IMAGE_DST="${MODULES_MODULE_SOURCE}/${MODULES_MODULE_NAME}:${IMAGE_TAG}"

        echo "✨ Pushing ${IMAGE_SRC} to ${IMAGE_DST}"
        crane copy ${IMAGE_SRC} ${IMAGE_DST}
      done
    # Bundle image
    - |
      IMAGE_SRC="$(jq -r '.Images."bundle".DockerImageName' images_tags_werf.json)"
      IMAGE_DST="${MODULES_MODULE_SOURCE}/${MODULES_MODULE_NAME}:${MODULES_MODULE_TAG}"

      echo "✨ Pushing ${IMAGE_SRC} to ${IMAGE_DST}"
      crane copy ${IMAGE_SRC} ${IMAGE_DST}
    # Release-channel image
    - |
      IMAGE_SRC="$(jq -r '.Images."release-channel-version".DockerImageName' images_tags_werf.json)"
      IMAGE_DST="${MODULES_MODULE_SOURCE}/${MODULES_MODULE_NAME}/release:${MODULES_MODULE_TAG}"

      echo "✨ Pushing ${IMAGE_SRC} to ${IMAGE_DST}"
      crane copy ${IMAGE_SRC} ${IMAGE_DST}
    # Register module
    - |
      echo "✨ Register the module ${MODULES_MODULE_NAME}"
      crane append \
        --oci-empty-base \
        --new_layer "" \
        --new_tag "${MODULES_MODULE_SOURCE}:${MODULES_MODULE_NAME}"

.deploy-prod-rules:
  rules:
    # add MANUAL deploy job if $FORCE_CI variable is defined
    - if: $FORCE_CI
      when: manual
    # do not run if some required variables is empty
    - if: '$PROD_MODULES_REGISTRY == null || $PROD_MODULES_REGISTRY == "" || $PROD_MODULES_REGISTRY_PATH == null || $PROD_MODULES_REGISTRY_PATH == ""'
      when: never
    # add MANUAL deploy job only if it is a tag release and release channel is defined
    - if: '$CI_COMMIT_TAG && $RELEASE_CHANNEL'
      when: manual

.deploy:
  stage: deploy
  rules:
    - !reference [.deploy-prod-rules, rules]
  script:
  - |
    REPO="${MODULES_REGISTRY}/${MODULES_REGISTRY_PATH}/${MODULES_MODULE_NAME}/release"

    IMAGE_SRC="${REPO}:${MODULES_MODULE_TAG}"
    IMAGE_DST="${REPO}:${RELEASE_CHANNEL}"

    echo "✨ Pushing ${IMAGE_SRC} to ${IMAGE_DST}"
    crane copy "${IMAGE_SRC}" "${IMAGE_DST}"
