# variables:
#   $TAG - module image tag
#   $MODULE_NAME - module name
#   $DD_URL - URL to defectDojo
#   $DD_TOKEN - token of defectDojo to upload reports
#   $PROD_REGISTRY - must be deckhouse prod read registry, used to get trivy databases and release images
#   $PROD_REGISTRY_USER - username to log in to deckhouse prod read registry
#   $PROD_REGISTRY_PASSWORD - password to log in to deckhouse prod read registry
#   $DEV_REGISTRY - must be deckhouse dev registry, used to get dev images
#   $DEV_REGISTRY_USER - username to log in to deckhouse dev registry
#   $DEV_REGISTRY_PASSWORD - password to log in to deckhouse dev registry
#   $TRIVY_REPORTS_LOG_OUTPUT - true/false. Output Trivy reports into CI job log, default - true
#   $SCAN_SEVERAL_LASTEST_RELEASES - true/false. Whether to scan last several releases or not. For scheduled pipelines override will not work as value is always true.
#   $LATEST_RELEASES_AMOUNT - Number of latest releases to scan. Default is: 3
#   $SEVERITY - Vulnerabilities severity to scan. Default is: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
#   $MODULE_PROD_REGISTRY_CUSTOM_PATH - Module custom path in prod registry. Example: flant/modules
#   $MODULE_DEV_REGISTRY_CUSTOM_PATH - Module custom path in dev registry. Example: flant/modules
#   $CVE_TESTS_REPO_GIT - Git URL private repository with CVE scripts (required)
#   $CVE_TESTS_REPO_SSH_PRIVATE_KEY - SSH private key for access to the CVE tests repository (required)

.cve_scan:
  variables:
    # Рабочая директория для временных файлов CVE сканирования
    WORKDIR: "cve-scan"
  before_script:
    # Настройка SSH для доступа к приватному репозиторию с CVE скриптами
    - |
      echo "[SSH_SETUP] Setup SSH access to the private repository"
      echo "============================================================="

      eval $(ssh-agent -s)
      echo "$CVE_TESTS_REPO_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
      HOST=$(echo "$CVE_TESTS_REPO_GIT" | sed -n 's/.*@\([^:]*\):.*/\1/p')
      echo "Adding host to known_hosts: $HOST"
      mkdir -p ~/.ssh
      touch ~/.ssh/known_hosts
      ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts 2>/dev/null || true

      echo "SSH setup completed successfully"
      echo ""

    - |
      echo "[SCRIPT_DOWNLOAD] Downloading CVE script from the private GitLab repository"
      echo "================================================================="
      
      mkdir -p "${WORKDIR}/scripts"
      echo "Cloning repository: $CVE_TESTS_REPO_GIT"
      git clone "$CVE_TESTS_REPO_GIT" "${WORKDIR}/scripts"
      chmod +x "${WORKDIR}/scripts/cve_scan.sh"
      
      echo "CVE script successfully downloaded and configured"
      echo ""

  script:
    - |
      echo "[CVE_EXECUTION] Starting CVE scanning for external modules"
      echo "==========================================================="
      
      if [ -z "${TAG}" ]; then
        TAG="${CI_DEFAULT_BRANCH}"
      fi
      
      if [ -n "${CI_COMMIT_TAG}" ]; then
        TAG=$(echo "${TAG}" | sed 's/^v//' | cut -d '.' -f -2)
      fi

      if [ "${CI_PIPELINE_SOURCE}" == "schedule" ]; then
        SCAN_SEVERAL_LASTEST_RELEASES="true"
      fi
      
      echo "Scanning parameters:"
      echo "   ├─ Module: ${MODULE_NAME}"
      echo "   ├─ Tag: ${TAG}"
      echo "   ├─ Event type: ${CI_PIPELINE_SOURCE}"
      echo "   ├─ Scan several releases: ${SCAN_SEVERAL_LASTEST_RELEASES:-false}"
      echo "   └─ Number of releases: ${LATEST_RELEASES_AMOUNT:-3}"
      echo ""

    - |
      echo "[ENV_SETUP] Setting up environment variables"
      echo "=============================================="
      
      export TAG="${TAG}"
      export CASE="external_modules"
      export MODULE_NAME="${MODULE_NAME}"
      
      export PROD_REGISTRY="${PROD_REGISTRY}"
      export PROD_REGISTRY_USER="${PROD_REGISTRY_USER}"
      export PROD_REGISTRY_PASSWORD="${PROD_REGISTRY_PASSWORD}"
      export DEV_REGISTRY="${DEV_REGISTRY}"
      export DEV_REGISTRY_USER="${DEV_REGISTRY_USER}"
      export DEV_REGISTRY_PASSWORD="${DEV_REGISTRY_PASSWORD}"
      export DD_URL="${DD_URL}"
      export DD_TOKEN="${DD_TOKEN}"
      export COMMIT_SHA="${CI_COMMIT_SHA}"
      export COMMIT_TAG="${CI_COMMIT_REF_NAME}"
      export EVENT_NAME="${CI_PIPELINE_SOURCE}"
      export SEVERITY="${SEVERITY:-UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL}"
      export SCAN_SEVERAL_LATEST_RELEASES="${SCAN_SEVERAL_LASTEST_RELEASES:-false}"
      export LATEST_RELEASES_AMOUNT="${LATEST_RELEASES_AMOUNT:-3}"
      export TRIVY_REPORTS_LOG_OUTPUT="${TRIVY_REPORTS_LOG_OUTPUT:-true}"
      export MODULE_PROD_REGISTRY_CUSTOM_PATH="${MODULE_PROD_REGISTRY_CUSTOM_PATH:-}"
      export MODULE_DEV_REGISTRY_CUSTOM_PATH="${MODULE_DEV_REGISTRY_CUSTOM_PATH:-}"
      
      # Рабочая директория
      export WORKDIR="${WORKDIR}"
      
      echo "Environment variables setup completed successfully"
        echo ""

    # Запуск CVE скрипта
    - |
      echo "[SCRIPT_RUN] Starting CVE scanning for module ${MODULE_NAME} with tag ${TAG}"
      echo "=================================================================================="
      
      "${WORKDIR}/scripts/cve_scan.sh"
      
      echo ""
      echo "[SUCCESS] CVE scanning completed successfully!"
      echo "==============================================="
